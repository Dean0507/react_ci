language: generic

sudo: required
#도커 환경에서 만들것이라고 선언
services:
  - docker
#테스트 하기 전 도커 이미지를 생성 dev용으로 테스트(프론트엔드만)
before_install:
  - docker build -t deankim0507/react-test-app -f ./frontend/Dockerfile.dev ./frontend
#테스트
script:
  - docker run -e CI=true deankim0507/react-test-app npm run test
#테스트 성공하면 하나하나 프로젝트의 운영버전 설정
after_success:
  - docker build -t deankim0507/docker-frontend ./frontend
  - docker build -t deankim0507/docker-backend ./backend
  - docker build -t deankim0507/docker-nginx ./nginx
# 도커 허브에 로그인 $ travis ci에 비밀번호를 적어줌
  - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_ID" --password-stdin
#도커 허브에 보내주기 위해서는 docker push사용
  - docker push deankim0507/docker-frontend
  - docker push deankim0507/docker-backend
  - docker push deankim0507/docker-nginx
  - echo "Test Success"
deploy:
  provider: elasticbeanstalk
  region: "ca-central-1"
  app: "docker_fullstack_app"
  env: "DockerFullstackApp-env"
  # s3에가서 버켓네임 가져오기
  bucket_name: "elasticbeanstalk-ca-central-1-522443927346"
  # app 이름과 동일
  bucket_path: "docker_fullstack_app"
  # 마스터에 push 되었을때만 deploy 할것이다
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_ACCESS_KEY